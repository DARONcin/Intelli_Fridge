/* empty css                                           */
import { c as createComponent, r as renderTemplate, m as maybeRenderHead, e as renderComponent, b as createAstro } from '../chunks/astro/server_pfMX3tV2.mjs';
import 'kleur/colors';
import { $ as $$LandingHeader5 } from '../chunks/LandingHeader5_DIxHokZu.mjs';
/* empty css                                         */
export { renderers } from '../renderers.mjs';

const $$Astro = createAstro();
const $$Tecnologias = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Tecnologias;
  return renderTemplate`<meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0">${maybeRenderHead()}<body data-astro-cid-ofnozrxq> ${renderComponent($$result, "LandingHeader5", $$LandingHeader5, { "data-astro-cid-ofnozrxq": true })} <div class="background-container" data-astro-cid-ofnozrxq> <!-- Sección de Tecnologías --> <section class="technologies-section" data-astro-cid-ofnozrxq> <div class="technologies-content" data-astro-cid-ofnozrxq> <h1 class="technologies-title" data-astro-cid-ofnozrxq>Tecnologías</h1> <br data-astro-cid-ofnozrxq> <div class="technologies-cards" data-astro-cid-ofnozrxq> <div class="technologies-card" data-astro-cid-ofnozrxq> <img src="https://cdn.icon-icons.com/icons2/2415/PNG/512/react_original_logo_icon_146374.png" alt="React" class="technologies-card-image" data-astro-cid-ofnozrxq> <h2 class="technologies-card-title" data-astro-cid-ofnozrxq>React</h2> <p class="technologies-card-description" data-astro-cid-ofnozrxq>Una biblioteca de JavaScript para construir interfaces de usuario. Fácil de usar acompañado por CSS.</p> </div> <div class="technologies-card" data-astro-cid-ofnozrxq> <img src="https://cdn.icon-icons.com/icons2/3911/PNG/512/astro_logo_icon_247543.png" alt="Astro" class="technologies-card-image" data-astro-cid-ofnozrxq> <h2 class="technologies-card-title" data-astro-cid-ofnozrxq>Astro</h2> <p class="technologies-card-description" data-astro-cid-ofnozrxq>Framework web para construir sitios web. Astro es conocido por ser pionero en una nueva arquitectura frontend para reducir la sobrecarga y complejidad de JavaScript.</p> </div> <div class="technologies-card" data-astro-cid-ofnozrxq> <img src="https://cdn.icon-icons.com/icons2/2148/PNG/512/tailwind_icon_131947.png" alt="Tailwind" class="technologies-card-image" data-astro-cid-ofnozrxq> <h2 class="technologies-card-title" data-astro-cid-ofnozrxq>Tailwind</h2> <p class="technologies-card-description" data-astro-cid-ofnozrxq>Framework de CSS de código abierto​ para el diseño de páginas web. La principal característica es que, no genera una serie de clases predefinidas para elementos como botones o tablas.</p> </div> </div> </div> </section> <!-- Sección de Componentes --> <section class="components-section" data-astro-cid-ofnozrxq> <div class="technologies-content" data-astro-cid-ofnozrxq> <h1 class="technologies-title" data-astro-cid-ofnozrxq>Componentes</h1> <br data-astro-cid-ofnozrxq> <div class="components-cards" data-astro-cid-ofnozrxq> <div class="components-card" data-astro-cid-ofnozrxq> <img src="https://m.media-amazon.com/images/I/61o2ZUzB4XL._AC_SL1027_.jpg" alt="ESP-32" class="components-card-image" data-astro-cid-ofnozrxq> <h2 class="components-card-title" data-astro-cid-ofnozrxq>ESP-32</h2> <p class="components-card-description" data-astro-cid-ofnozrxq>Microcontrolador que integra tecnologías WiFi y Bluetooth, que le proporcionan conectividad con internet a otros dispositivos.</p> </div> <div class="components-card" data-astro-cid-ofnozrxq> <img src="https://www.330ohms.com/cdn/shop/products/photo_IC-20010_DHT11_DigitalTemperatureHumiditySensor_DHT11_01_740x740.png?v=1627344523" alt="Sensor DHT11" class="components-card-image" data-astro-cid-ofnozrxq> <h2 class="components-card-title" data-astro-cid-ofnozrxq>Sensor DHT11</h2> <p class="components-card-description" data-astro-cid-ofnozrxq>Sensor de temperatura y humedad que utiliza un sensor capacitivo de humedad y un termistor para medir el aire circundante, y muestra los datos mediante una señal digital en el pin de datos.</p> </div> <div class="components-card" data-astro-cid-ofnozrxq> <img src="https://m.media-amazon.com/images/I/610VbLyCGDL._AC_UF894,1000_QL80_.jpg" alt="ESP32 Cam" class="components-card-image" data-astro-cid-ofnozrxq> <h2 class="components-card-title" data-astro-cid-ofnozrxq>ESP32 Cam</h2> <p class="components-card-description" data-astro-cid-ofnozrxq>Módulo de cámara con ESP32 que permite la captura de imágenes y transmisión de video.</p> </div> <div class="components-card" data-astro-cid-ofnozrxq> <img src="https://inalarm.gt/image/cache/data/Categorias/Parqueo/zkteco/Bumping%20Bounce-2-800x800.png" alt="Sensor de barrera" class="components-card-image" data-astro-cid-ofnozrxq> <h2 class="components-card-title" data-astro-cid-ofnozrxq>Sensor de barrera</h2> <p class="components-card-description" data-astro-cid-ofnozrxq>Sensor utilizado para detectar la presencia de objetos o personas mediante una barrera de luz infrarroja.</p> </div> <div class="components-card" data-astro-cid-ofnozrxq> <img src="https://electronicathido.com/assets/recursosImagenes/productos/702/imagenes/16x2azul.jpg" alt="TFT 3.5" class="components-card-image" data-astro-cid-ofnozrxq> <h2 class="components-card-title" data-astro-cid-ofnozrxq>Display</h2> <p class="components-card-description" data-astro-cid-ofnozrxq>Una pantalla LCD es una pantalla plana y delgada formada por un número de píxeles en color o monocromos colocados delante de una fuente de luz o reflectora. </p> </div> </div> </div> </section> </div> </body>`;
}, "/home/daroncin/Intelli_Fridge/src/components/Tecnologias.astro", void 0);

const $$Technowrapper = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${renderComponent($$result, "Tecnologias", $$Tecnologias, {})}`;
}, "/home/daroncin/Intelli_Fridge/src/pages/Technowrapper.astro", void 0);

const $$file = "/home/daroncin/Intelli_Fridge/src/pages/Technowrapper.astro";
const $$url = "/Technowrapper";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$Technowrapper,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
