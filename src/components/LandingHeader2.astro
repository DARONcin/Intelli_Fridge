---
import Logo from "./Logo.astro"
---

<header
  id="landing-header"
  class="py-3 px-10 flex items-center fixed top-0 w-full justify-between z-40 text-white"
>
  <div class="flex flex-grow basis-0">
    <a href="./"><Logo /></a>
  </div>

  <nav class="hidden xl:block sm:hidden">
    <ul
      class="text-sm transition-colors duration-500 text-current font-medium inline-block px-4 py-2"
    >
      <li><a href="#price">Price</a></li>
    </ul>
  </nav>
  
  <nav id="modal-menu" class="xl:hidden flex flex-col bg-white fixed top-0 left-0 right-0 bottom-0">
    <button id="close-btn" class="w-screen flex justify-end p-5">
      <img class="h-6" src="/close-icon.svg" alt="close icon">
    </button>
    <ul
      class="flex flex-col mt-4 transition-colors duration-200 text-black font-medium px-6 py-3 rounded-md w-full"
    >
      <!-- Aquí podrías agregar elementos de lista si es necesario -->
    </ul>
  </nav>  

  <div
    id="menu-backdrop"
    class={`
      absolute bg-black/5 backdrop-blur-lg rounded
      translate-x-[var(--left)] translate-y-[var(--top)]
      left-0 top-0
      w-[var(--width)] h-[var(--height)]
      transition-all duration-500
      ease-in-out opacity-0 -z-10
    `}
  >
  </div>
</header>

<script>
  const menuBtn = document.getElementById('menu-btn');
  const modalMenu = document.querySelector("#modal-menu");
  const menuItems = modalMenu ? modalMenu.querySelectorAll('li > a') : [];
  const closeBtn = document.querySelector("#close-btn");
  
  function toggleDropdownMenu() {
    modalMenu?.classList.toggle('hidden');
  }

  menuBtn?.addEventListener('click', toggleDropdownMenu);
  closeBtn?.addEventListener('click', toggleDropdownMenu);
  menuItems.forEach(item => {
    item.addEventListener('click', toggleDropdownMenu);
  });
</script>

<script>
  const listItem = document.querySelectorAll("#landing-header li");
  const menuBackDrop = document.querySelector("#menu-backdrop") as HTMLElement;

  listItem.forEach((item) => {
    item.addEventListener("mouseenter", () => {
      const { left, top, width, height } = item.getBoundingClientRect();

      menuBackDrop.style.setProperty("--left", `${left}px`);
      menuBackDrop.style.setProperty("--top", `${top}px`);
      menuBackDrop.style.setProperty("--width", `${width}px`);
      menuBackDrop.style.setProperty("--height", `${height}px`);

      menuBackDrop.style.opacity = "1";
      menuBackDrop.style.visibility = "visible";
    });

    item.addEventListener("mouseleave", () => {
      menuBackDrop.style.opacity = "0";
      menuBackDrop.style.visibility = "hidden";
    });
  });
</script>

<script>
  const headerEl = document.querySelector("#landing-header") as HTMLElement;

  const observerOptions = {
    root: null,
    rootMargin: "0px",
    threshold: 0.9,
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      const { isIntersecting } = entry;
      if (isIntersecting) {
        const color = entry.target.getAttribute("data-header-color");
        if (color) {
          headerEl.style.color = color;
        }
      }
    });
  }, observerOptions);

  const sectionElements = document.querySelectorAll(".landing-section");
  sectionElements.forEach((section) => observer.observe(section));
</script>
